name: Build precompiled NIFs

env:
  NIF_DIRECTORY: "native/mjml_nif"

on:
  push:
    branches:
      - main
      - test
    tags:
      - "*"

jobs:
  build_release:
    name: NIF ${{ matrix.nif }} - ${{ matrix.job.target }} (${{ matrix.job.os }})
    runs-on: ${{ matrix.job.os }}
    strategy:
      fail-fast: false
      matrix:
        nif: ["2.16", "2.15"]
        job:
          - { target: aarch64-unknown-linux-gnu   , os: ubuntu-22.04 , use-cross: true }
          - { target: aarch64-unknown-linux-musl  , os: ubuntu-22.04 , use-cross: true }
          - { target: aarch64-apple-darwin        , os: macos-13      }
          - { target: riscv64gc-unknown-linux-gnu , os: ubuntu-22.04 , use-cross: true }
          - { target: x86_64-apple-darwin         , os: macos-13      }
          - { target: x86_64-unknown-linux-gnu    , os: ubuntu-22.04  }
          - { target: x86_64-unknown-linux-musl   , os: ubuntu-22.04 , use-cross: true }
          - { target: x86_64-pc-windows-gnu       , os: windows-2025  }
          - { target: x86_64-pc-windows-msvc      , os: windows-2025  }

    steps:
    - name: Checkout source code
      uses: actions/checkout@v4

    - name: Extract project version
      shell: bash
      run: |
        # Get the project version from mix.exs
        echo "PROJECT_VERSION=$(sed -n 's/^  @version "\(.*\)"/\1/p' mix.exs | head -n1)" >> $GITHUB_ENV

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable
        target: ${{ matrix.job.target }}


    - name: Build the project
      id: build-crate
      uses: philss/rustler-precompiled-action@v1.1.4
      with:
        project-name: mjml_nif
        project-version: ${{ env.PROJECT_VERSION }}
        target: ${{ matrix.job.target }}
        nif-version: ${{ matrix.nif }}
        use-cross: ${{ matrix.job.use-cross }}
        variant: ${{ matrix.job.variant }}
        cargo-args: ${{ matrix.job.cargo-args }}
        cross-version: "v0.2.5"
        project-dir: "native/mjml_nif"

    - name: Artifact upload
      uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.build-crate.outputs.file-name }}
        path: ${{ steps.build-crate.outputs.file-path }}

    - name: Publish archives and packages
      uses: softprops/action-gh-release@v2
      with:
        files: |
          ${{ steps.build-crate.outputs.file-path }}
      if: startsWith(github.ref, 'refs/tags/')
